---

- name: Jenkins | Check jenkins status
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kubesphere-devops-system ks-jenkins
  register: jenkins_status
  ignore_errors: True

# Get old config
- import_tasks: get_old_config.yaml
  when:
    - jenkins_status.rc == 0

# Uninstall update center
- name: ks-devops | Checking Jenkins update center status
  shell: >
    {{ bin_dir }}/kubectl get deploy -n kubesphere-devops-system uc-jenkins-update-center
  register: jenkins_uc_status
  failed_when: false

- import_tasks: uninstall_update_center.yaml
  when:
    - jenkins_uc_status.rc == 0

# SonarQube application
- block:
    - name: ks-devops | Getting sonarqube host
      shell: >
        {{ bin_dir }}/kubectl get cm -n kubesphere-system kubesphere-config -o jsonpath='{.data.kubesphere\.yaml}' | grep "sonarQube:" -A 2 | grep "host" | awk '{print $2}'
      register: sonarqube_host

    - name: ks-devops | Getting sonarqube token
      shell: >
        {{ bin_dir }}/kubectl get cm -n kubesphere-system kubesphere-config -o jsonpath='{.data.kubesphere\.yaml}' | grep "sonarQube:" -A 2 | grep "token" | awk '{print $2}'
      register: sonarqube_token
  when:
    - devops.sonarqube is not defined

- set_fact:
    sonarQubeHost: "{{ sonarqube_host.stdout }}"
    sonarQubeToken: "{{ sonarqube_token.stdout }}"
  when:
    - sonarqube_host is defined and sonarqube_host.stdout is defined and sonarqube_host.stdout != ""
    - sonarqube_token is defined and sonarqube_token.stdout is defined and sonarqube_token.stdout != ""

- set_fact:
    sonarQubeHost: "{{ devops.sonarqube.externalSonarUrl }}"
    sonarQubeToken: "{{ devops.sonarqube.externalSonarToken }}"
  when:
    - devops.sonarqube is defined
    - devops.sonarqube.externalSonarUrl is defined
    - devops.sonarqube.externalSonarToken is defined

# DevOps application
- name: ks-devops | Getting KubeSphere JWT secret
  register: ks_jwt_secret
  shell: >
    {{ bin_dir }}/kubectl get secret -n kubesphere-system kubesphere-secret -ojsonpath="{.data.secret}" | base64 -d

- name: ks-devops | Debug KubeSphere JWT secret
  debug:
    var: ks_jwt_secret

- name: ks-devops | Getting devops installation charts
  copy:
    src: "{{ item }}"
    dest: "{{ kubesphere_dir }}/"
  loop:
    - ks-devops

- name: ks-devops | Creating manifests
  template:
    src: "{{ item.file }}.j2"
    dest: "{{ kubesphere_dir }}/{{ item.path }}/{{ item.file }}"
  with_items:
    - { path: ks-devops, file: ks-devops.yaml }
    - { path: ks-devops, file: ks-devops-plugin.yaml }

- name: ks-devops | Upgrading or installing ks-devops
  shell: |
    {{ bin_dir }}/helm upgrade --install ks-ctl {{ kubesphere_dir }}/ks-devops/charts/ks-devops-0.1.0.tgz \
    -n kubesphere-devops-system \
    -f {{ kubesphere_dir }}/ks-devops/ks-devops.yaml

- name: ks-devops | Upgrading or installing ks-devops-plugin
  shell: |
    {{ bin_dir }}/helm upgrade --install ks-devops-plugin {{ kubesphere_dir }}/ks-devops/charts/ks-devops-plugin-0.1.0.tgz \
    -n kubesphere-devops-system \
    -f {{ kubesphere_dir }}/ks-devops/ks-devops-plugin.yaml

- name: ks-devops | Labelling devops namespaces as system workspace
  shell: |
    {{ bin_dir }}/kubectl label --overwrite namespaces {{ item }} kubesphere.io/workspace=system-workspace
  loop:
    - kubesphere-devops-worker